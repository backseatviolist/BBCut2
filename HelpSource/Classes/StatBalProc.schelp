class:: StatBalProc
summary:: Automatic breakbeat cutting algorithm using statistical feedback
categories:: Libraries>BBCut>Cut procedures
related:: Overviews/BBCut, Classes/StatBalStream, Classes/StatBalProc2

description::

Extension of ChooseCutProc using Charles Ames' method of statistical feedback to control selection of
cut size and repeat states. The essential auxilliary class is StatBalStream. The theoretical basis of the use of
statistical feedback is control over a continuum from Lehmer style random number generation
to deterministic behaviour via the heterogeneity parameter. The application to automatic cutting is to
promote different types of short term diversity with long term proportions preserved for
parameter choices. Note that statistics are slightly perverted by phrases, which may require that only a
smaller cutsize or number of repeats fits in the available space. Set phraselength very large to avoid that.

It is fair to say that the effect can remain unnoticeable, depending on choices of heterogeneity. Low
heterogeneity statistical feedback restricts the choice of potential cut sequences, avoiding strange
dispersions of states (that is, rare states possibly cropping up many times in a row).

For additional data on the algorithm see Nick Collins, "Further Automatic BreakBeat Cutting Methods", Proceedings of Generative Art 2001, reproduced at http://www.cus.cam.ac.uk/~nc272/.

classmethods::

method:: new

argument:: cutsbs
A StatBalStream object that returns a cut size from the next method.
argument:: repeatsbs
A StatBalStream object that returns the number of repeats from the next method.
argument:: phraselength
Next length of phrase in beats.
argument:: rollchance
A probability of a roll near the end of a phrase.
argument:: rollallowed
number of beats within sight of the end of the current phrase within which a roll is permissible.
argument:: bpsd
beats per sub division. Sets a primitive cut size resolution for choose offset messages.

examples::

You should substitute your own break sample to hear the effects of this cut procedure more clearly. Either way, the effect is fairly subtle.

code::


b = BBCutBuffer(Platform.resourceDir +/+ "sound/break.aiff", 8);

//defaults
BBCut2(CutBuf3(),StatBalProc()).play(2.4);


(   //defaults
BBCut2(CutBuf3(b),StatBalProc(
    StatBalStream([0.5,1.5],[0.3,0.7],0.02),    //almost a deterministic swap in proportions 3:7
    StatBalStream([1,2],[0.6,0.4],1.0),     //some random dispersion in the short term (long term works out at 3:2)
    8000.0  //don't constrain the phrase for 2000 4/4 bars, ie 13 minutes at this tempo
            //note that it makes rolls very very rare!
)).play(2.4);
)



(   //comparison with ChooseCutProc and Lehmer choices
BBCut2(CutBuf3(b),
    ChooseCutProc({[0.5,1.5].wchoose([0.3,0.7])},{[1,2].wchoose([0.6,0.4])},nil,8000.0)
).play(2.4);
)

::